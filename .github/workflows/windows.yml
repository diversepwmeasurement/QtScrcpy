jobs:
  build:
    env:
      plantform-des: win
      qt-install-path: ${{ github.workspace }}/${{ matrix.qt-ver }}
      target-name: QtScrcpy
      vcinstall-path: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC
      vcvarsall-path: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat
    name: Build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: cache-qt
      name: Cache Qt
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}/${{ matrix.qt-ver }}/${{ matrix.qt-arch }}
        path: ${{ env.qt-install-path }}/${{ matrix.qt-arch-install }}
    - continue-on-error: true
      name: Install Qt
      uses: jurplel/install-qt-action@v2.13.0
      with:
        arch: ${{ matrix.qt-arch }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        target: desktop
        version: ${{ matrix.qt-ver }}
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ssh-key: ${{ secrets.BOT_SSH_KEY }}
        submodules: 'true'
    - continue-on-error: true
      env:
        ENV_QT_PATH: ${{ env.qt-install-path }}
        ENV_VCVARSALL: ${{ env.vcvarsall-path }}
      name: Build MSVC
      run: 'call python ci\generate-version.py

        call "ci\win\build_for_win.bat" RelWithDebInfo ${{ matrix.msvc-arch }}

        '
      shell: cmd
    - continue-on-error: true
      id: get-version
      name: Get the version
      run: echo ::set-output name=version::${GITHUB_REF##*/}
      shell: bash
    - continue-on-error: true
      env:
        ENV_QT_PATH: ${{ env.qt-install-path }}
        ENV_VCINSTALL: ${{ env.vcinstall-path }}
        ENV_VCVARSALL: ${{ env.vcvarsall-path }}
        publish_name: ${{ env.target-name }}-${{ env.plantform-des }}-${{ matrix.msvc-arch
          }}-${{ steps.get-version.outputs.version }}
      id: package
      name: Package
      run: "cmd.exe /c ci\\win\\publish_for_win.bat ${{ matrix.msvc-arch }} ..\\build\\\
        ${{ env.publish_name }}\n# \u6253\u5305zip\nCompress-Archive -Path ci\\build\\\
        ${{ env.publish_name }} ci\\build\\${{ env.publish_name }}.zip\necho \"::set-output\
        \ name=package-name::${{ env.publish_name }}\"\n"
    - continue-on-error: true
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.package.outputs.package-name }}.zip
        path: ci\build\${{ steps.package.outputs.package-name }}
    - continue-on-error: true
      if: startsWith(github.ref, 'refs/tags/')
      name: Upload Release
      uses: svenstaro/upload-release-action@v1-release
      with:
        asset_name: ${{ steps.package.outputs.package-name }}.zip
        file: ci\build\${{ steps.package.outputs.package-name }}.zip
        overwrite: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
    strategy:
      matrix:
        include:
        - msvc-arch: x64
          qt-arch: win64_msvc2019_64
          qt-arch-install: msvc2019_64
        - msvc-arch: x86
          qt-arch: win32_msvc2019
          qt-arch-install: msvc2019
        qt-arch:
        - win64_msvc2019_64
        - win32_msvc2019
        qt-ver:
        - 5.15.2
name: Windows
on:
  repository_dispatch:
    types: trigger-ga___windows.yml
