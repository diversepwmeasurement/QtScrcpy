jobs:
  build:
    env:
      plantform-des: ubuntu
      qt-install-path: ${{ github.workspace }}/${{ matrix.qt-ver }}
      target-name: QtScrcpy
    name: Build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Install Qt
      uses: jurplel/install-qt-action@v2.13.0
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ matrix.qt-ver }}
    - continue-on-error: true
      id: cache-qt
      name: Cache Qt
      uses: actions/cache@v3.0.6
      with:
        key: ${{ runner.os }}/${{ matrix.qt-ver }}/${{ matrix.qt-arch-install }}
        path: ${{ env.qt-install-path }}/${{ matrix.qt-arch-install }}
    - continue-on-error: true
      name: Install GL library
      run: sudo apt-get install -y libglew-dev libglfw3-dev
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ssh-key: ${{ secrets.BOT_SSH_KEY }}
        submodules: 'true'
    - continue-on-error: true
      env:
        ENV_QT_PATH: ${{ env.qt-install-path }}
      name: Build RelWithDebInfo
      run: 'ci/linux/build_for_linux.sh "RelWithDebInfo"

        '
    - continue-on-error: true
      name: Upload RelWithDebInfo
      uses: actions/upload-artifact@v3.1.0
      with:
        name: QtScrcpy-${{ matrix.os }}-${{ matrix.qt-arch-install }}-RelWithDebInfo
        path: output/x64/RelWithDebInfo/*
    - continue-on-error: true
      env:
        ENV_QT_PATH: ${{ env.qt-install-path }}
      name: Build Release
      run: 'ci/linux/build_for_linux.sh "Release"

        '
    - continue-on-error: true
      name: Upload Release
      uses: actions/upload-artifact@v3.1.0
      with:
        name: QtScrcpy-${{ matrix.os }}-${{ matrix.qt-arch-install }}-Release
        path: output/x64/Release/*
    - continue-on-error: true
      name: Install the zip utility
      run: 'sudo apt install zip -y

        '
    - continue-on-error: true
      name: Zip the Artifacts
      run: 'zip -r QtScrcpy-${{ matrix.os }}-${{ matrix.qt-arch-install }}.zip output/x64/Release

        '
    - continue-on-error: true
      if: startsWith(github.ref, 'refs/tags/')
      name: Upload to Releases
      uses: svenstaro/upload-release-action@2.3.0
      with:
        asset_name: QtScrcpy-${{ matrix.os }}-${{ matrix.qt-arch-install }}.zip
        file: QtScrcpy-${{ matrix.os }}-${{ matrix.qt-arch-install }}.zip
        overwrite: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
    strategy:
      matrix:
        gcc-arch:
        - x64
        os:
        - ubuntu-22.04
        qt-arch-install:
        - gcc_64
        qt-ver:
        - 5.15.2
name: Ubuntu
on:
  repository_dispatch:
    types: trigger-ga___ubuntu.yml
