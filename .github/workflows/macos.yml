jobs:
  build:
    env:
      plantform-des: mac
      qt-install-path: ${{ github.workspace }}/${{ matrix.qt-ver }}
      target-name: QtScrcpy
    name: Build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: cache-qt
      name: Cache Qt
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}/${{ matrix.qt-ver }}/${{ matrix.qt-arch-install }}
        path: ${{ env.qt-install-path }}/${{ matrix.qt-arch-install }}
    - continue-on-error: true
      name: Install Qt
      uses: jurplel/install-qt-action@v2.13.0
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ matrix.qt-ver }}
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ssh-key: ${{ secrets.BOT_SSH_KEY }}
        submodules: 'true'
    - continue-on-error: true
      env:
        ENV_QT_PATH: ${{ env.qt-install-path }}
      name: Build MacOS
      run: 'python ci/generate-version.py

        ci/mac/build_for_mac.sh RelWithDebInfo

        '
    - continue-on-error: true
      id: get-version
      name: Get the version
      run: echo ::set-output name=version::${GITHUB_REF##*/}
      shell: bash
    - continue-on-error: true
      env:
        ENV_QT_PATH: ${{ env.qt-install-path }}
        publish_name: ${{ env.target-name }}-${{ env.plantform-des }}-${{ matrix.clang-arch
          }}-${{ steps.get-version.outputs.version }}
      id: package
      name: Package
      run: 'ci/mac/publish_for_mac.sh ../build

        ci/mac/package_for_mac.sh

        mv ci/build/QtScrcpy.app ci/build/${{ env.publish_name }}.app

        mv ci/build/QtScrcpy.dmg ci/build/${{ env.publish_name }}.dmg

        echo "::set-output name=package-name::${{ env.publish_name }}"

        '
    - continue-on-error: true
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.package.outputs.package-name }}.zip
        path: ci/build/${{ steps.package.outputs.package-name }}.dmg
    - continue-on-error: true
      if: startsWith(github.ref, 'refs/tags/')
      name: Upload Release
      uses: svenstaro/upload-release-action@v1-release
      with:
        asset_name: ${{ steps.package.outputs.package-name }}.dmg
        file: ci/build/${{ steps.package.outputs.package-name }}.dmg
        overwrite: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
    strategy:
      matrix:
        clang-arch:
        - x64
        qt-arch-install:
        - clang_64
        qt-ver:
        - 5.15.2
name: MacOS
on:
  repository_dispatch:
    types: trigger-ga___macos.yml
